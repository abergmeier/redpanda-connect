// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AppRoleDeleteBindSecretID implements app-role-delete-bind-secret-id operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/bind-secret-id
func (UnimplementedHandler) AppRoleDeleteBindSecretID(ctx context.Context, params AppRoleDeleteBindSecretIDParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteBoundCidrList implements app-role-delete-bound-cidr-list operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/bound-cidr-list
func (UnimplementedHandler) AppRoleDeleteBoundCidrList(ctx context.Context, params AppRoleDeleteBoundCidrListParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeletePeriod implements app-role-delete-period operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/period
func (UnimplementedHandler) AppRoleDeletePeriod(ctx context.Context, params AppRoleDeletePeriodParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeletePolicies implements app-role-delete-policies operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/policies
func (UnimplementedHandler) AppRoleDeletePolicies(ctx context.Context, params AppRoleDeletePoliciesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteRole implements app-role-delete-role operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}
func (UnimplementedHandler) AppRoleDeleteRole(ctx context.Context, params AppRoleDeleteRoleParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteSecretIDBoundCidrs implements app-role-delete-secret-id-bound-cidrs operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/secret-id-bound-cidrs
func (UnimplementedHandler) AppRoleDeleteSecretIDBoundCidrs(ctx context.Context, params AppRoleDeleteSecretIDBoundCidrsParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteSecretIDNumUses implements app-role-delete-secret-id-num-uses operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/secret-id-num-uses
func (UnimplementedHandler) AppRoleDeleteSecretIDNumUses(ctx context.Context, params AppRoleDeleteSecretIDNumUsesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteSecretIDTTL implements app-role-delete-secret-id-ttl operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/secret-id-ttl
func (UnimplementedHandler) AppRoleDeleteSecretIDTTL(ctx context.Context, params AppRoleDeleteSecretIDTTLParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteTokenBoundCidrs implements app-role-delete-token-bound-cidrs operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/token-bound-cidrs
func (UnimplementedHandler) AppRoleDeleteTokenBoundCidrs(ctx context.Context, params AppRoleDeleteTokenBoundCidrsParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteTokenMaxTTL implements app-role-delete-token-max-ttl operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/token-max-ttl
func (UnimplementedHandler) AppRoleDeleteTokenMaxTTL(ctx context.Context, params AppRoleDeleteTokenMaxTTLParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteTokenNumUses implements app-role-delete-token-num-uses operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/token-num-uses
func (UnimplementedHandler) AppRoleDeleteTokenNumUses(ctx context.Context, params AppRoleDeleteTokenNumUsesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDeleteTokenTTL implements app-role-delete-token-ttl operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/token-ttl
func (UnimplementedHandler) AppRoleDeleteTokenTTL(ctx context.Context, params AppRoleDeleteTokenTTLParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDestroySecretID implements app-role-destroy-secret-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id/destroy
func (UnimplementedHandler) AppRoleDestroySecretID(ctx context.Context, req *AppRoleDestroySecretIdRequest, params AppRoleDestroySecretIDParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDestroySecretIDByAccessor implements app-role-destroy-secret-id-by-accessor operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id-accessor/destroy
func (UnimplementedHandler) AppRoleDestroySecretIDByAccessor(ctx context.Context, req *AppRoleDestroySecretIdByAccessorRequest, params AppRoleDestroySecretIDByAccessorParams) error {
	return ht.ErrNotImplemented
}

// AppRoleDestroySecretIDByAccessor2 implements app-role-destroy-secret-id-by-accessor2 operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/secret-id-accessor/destroy
func (UnimplementedHandler) AppRoleDestroySecretIDByAccessor2(ctx context.Context, params AppRoleDestroySecretIDByAccessor2Params) error {
	return ht.ErrNotImplemented
}

// AppRoleDestroySecretId2 implements app-role-destroy-secret-id2 operation.
//
// DELETE /auth/{approle_mount_path}/role/{role_name}/secret-id/destroy
func (UnimplementedHandler) AppRoleDestroySecretId2(ctx context.Context, params AppRoleDestroySecretId2Params) error {
	return ht.ErrNotImplemented
}

// AppRoleListRoles implements app-role-list-roles operation.
//
// GET /auth/{approle_mount_path}/role/
func (UnimplementedHandler) AppRoleListRoles(ctx context.Context, params AppRoleListRolesParams) (r *StandardListResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleListSecretIds implements app-role-list-secret-ids operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/secret-id/
func (UnimplementedHandler) AppRoleListSecretIds(ctx context.Context, params AppRoleListSecretIdsParams) (r *StandardListResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleLogin implements app-role-login operation.
//
// POST /auth/{approle_mount_path}/login
func (UnimplementedHandler) AppRoleLogin(ctx context.Context, req *AppRoleLoginRequest, params AppRoleLoginParams) error {
	return ht.ErrNotImplemented
}

// AppRoleLookUpSecretID implements app-role-look-up-secret-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id/lookup
func (UnimplementedHandler) AppRoleLookUpSecretID(ctx context.Context, req *AppRoleLookUpSecretIdRequest, params AppRoleLookUpSecretIDParams) (r *AppRoleLookUpSecretIdResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleLookUpSecretIDByAccessor implements app-role-look-up-secret-id-by-accessor operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id-accessor/lookup
func (UnimplementedHandler) AppRoleLookUpSecretIDByAccessor(ctx context.Context, req *AppRoleLookUpSecretIdByAccessorRequest, params AppRoleLookUpSecretIDByAccessorParams) (r *AppRoleLookUpSecretIdByAccessorResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadBindSecretID implements app-role-read-bind-secret-id operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/bind-secret-id
func (UnimplementedHandler) AppRoleReadBindSecretID(ctx context.Context, params AppRoleReadBindSecretIDParams) (r *AppRoleReadBindSecretIdResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadBoundCidrList implements app-role-read-bound-cidr-list operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/bound-cidr-list
func (UnimplementedHandler) AppRoleReadBoundCidrList(ctx context.Context, params AppRoleReadBoundCidrListParams) (r *AppRoleReadBoundCidrListResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadLocalSecretIds implements app-role-read-local-secret-ids operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/local-secret-ids
func (UnimplementedHandler) AppRoleReadLocalSecretIds(ctx context.Context, params AppRoleReadLocalSecretIdsParams) (r *AppRoleReadLocalSecretIdsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadPeriod implements app-role-read-period operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/period
func (UnimplementedHandler) AppRoleReadPeriod(ctx context.Context, params AppRoleReadPeriodParams) (r *AppRoleReadPeriodResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadPolicies implements app-role-read-policies operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/policies
func (UnimplementedHandler) AppRoleReadPolicies(ctx context.Context, params AppRoleReadPoliciesParams) (r *AppRoleReadPoliciesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadRole implements app-role-read-role operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}
func (UnimplementedHandler) AppRoleReadRole(ctx context.Context, params AppRoleReadRoleParams) (r *AppRoleReadRoleResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadRoleID implements app-role-read-role-id operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/role-id
func (UnimplementedHandler) AppRoleReadRoleID(ctx context.Context, params AppRoleReadRoleIDParams) (r *AppRoleReadRoleIdResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadSecretIDBoundCidrs implements app-role-read-secret-id-bound-cidrs operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/secret-id-bound-cidrs
func (UnimplementedHandler) AppRoleReadSecretIDBoundCidrs(ctx context.Context, params AppRoleReadSecretIDBoundCidrsParams) (r *AppRoleReadSecretIdBoundCidrsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadSecretIDNumUses implements app-role-read-secret-id-num-uses operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/secret-id-num-uses
func (UnimplementedHandler) AppRoleReadSecretIDNumUses(ctx context.Context, params AppRoleReadSecretIDNumUsesParams) (r *AppRoleReadSecretIdNumUsesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadSecretIDTTL implements app-role-read-secret-id-ttl operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/secret-id-ttl
func (UnimplementedHandler) AppRoleReadSecretIDTTL(ctx context.Context, params AppRoleReadSecretIDTTLParams) (r *AppRoleReadSecretIdTtlResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadTokenBoundCidrs implements app-role-read-token-bound-cidrs operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/token-bound-cidrs
func (UnimplementedHandler) AppRoleReadTokenBoundCidrs(ctx context.Context, params AppRoleReadTokenBoundCidrsParams) (r *AppRoleReadTokenBoundCidrsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadTokenMaxTTL implements app-role-read-token-max-ttl operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/token-max-ttl
func (UnimplementedHandler) AppRoleReadTokenMaxTTL(ctx context.Context, params AppRoleReadTokenMaxTTLParams) (r *AppRoleReadTokenMaxTtlResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadTokenNumUses implements app-role-read-token-num-uses operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/token-num-uses
func (UnimplementedHandler) AppRoleReadTokenNumUses(ctx context.Context, params AppRoleReadTokenNumUsesParams) (r *AppRoleReadTokenNumUsesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleReadTokenTTL implements app-role-read-token-ttl operation.
//
// GET /auth/{approle_mount_path}/role/{role_name}/token-ttl
func (UnimplementedHandler) AppRoleReadTokenTTL(ctx context.Context, params AppRoleReadTokenTTLParams) (r *AppRoleReadTokenTtlResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleTidySecretID implements app-role-tidy-secret-id operation.
//
// POST /auth/{approle_mount_path}/tidy/secret-id
func (UnimplementedHandler) AppRoleTidySecretID(ctx context.Context, params AppRoleTidySecretIDParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteBindSecretID implements app-role-write-bind-secret-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/bind-secret-id
func (UnimplementedHandler) AppRoleWriteBindSecretID(ctx context.Context, req *AppRoleWriteBindSecretIdRequest, params AppRoleWriteBindSecretIDParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteBoundCidrList implements app-role-write-bound-cidr-list operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/bound-cidr-list
func (UnimplementedHandler) AppRoleWriteBoundCidrList(ctx context.Context, req *AppRoleWriteBoundCidrListRequest, params AppRoleWriteBoundCidrListParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteCustomSecretID implements app-role-write-custom-secret-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/custom-secret-id
func (UnimplementedHandler) AppRoleWriteCustomSecretID(ctx context.Context, req *AppRoleWriteCustomSecretIdRequest, params AppRoleWriteCustomSecretIDParams) (r *AppRoleWriteCustomSecretIdResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleWritePeriod implements app-role-write-period operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/period
func (UnimplementedHandler) AppRoleWritePeriod(ctx context.Context, req *AppRoleWritePeriodRequest, params AppRoleWritePeriodParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWritePolicies implements app-role-write-policies operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/policies
func (UnimplementedHandler) AppRoleWritePolicies(ctx context.Context, req *AppRoleWritePoliciesRequest, params AppRoleWritePoliciesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteRole implements app-role-write-role operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}
func (UnimplementedHandler) AppRoleWriteRole(ctx context.Context, req *AppRoleWriteRoleRequest, params AppRoleWriteRoleParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteRoleID implements app-role-write-role-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/role-id
func (UnimplementedHandler) AppRoleWriteRoleID(ctx context.Context, req *AppRoleWriteRoleIdRequest, params AppRoleWriteRoleIDParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteSecretID implements app-role-write-secret-id operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id
func (UnimplementedHandler) AppRoleWriteSecretID(ctx context.Context, req *AppRoleWriteSecretIdRequest, params AppRoleWriteSecretIDParams) (r *AppRoleWriteSecretIdResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// AppRoleWriteSecretIDBoundCidrs implements app-role-write-secret-id-bound-cidrs operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id-bound-cidrs
func (UnimplementedHandler) AppRoleWriteSecretIDBoundCidrs(ctx context.Context, req *AppRoleWriteSecretIdBoundCidrsRequest, params AppRoleWriteSecretIDBoundCidrsParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteSecretIDNumUses implements app-role-write-secret-id-num-uses operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id-num-uses
func (UnimplementedHandler) AppRoleWriteSecretIDNumUses(ctx context.Context, req *AppRoleWriteSecretIdNumUsesRequest, params AppRoleWriteSecretIDNumUsesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteSecretIDTTL implements app-role-write-secret-id-ttl operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/secret-id-ttl
func (UnimplementedHandler) AppRoleWriteSecretIDTTL(ctx context.Context, req *AppRoleWriteSecretIdTtlRequest, params AppRoleWriteSecretIDTTLParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteTokenBoundCidrs implements app-role-write-token-bound-cidrs operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/token-bound-cidrs
func (UnimplementedHandler) AppRoleWriteTokenBoundCidrs(ctx context.Context, req *AppRoleWriteTokenBoundCidrsRequest, params AppRoleWriteTokenBoundCidrsParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteTokenMaxTTL implements app-role-write-token-max-ttl operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/token-max-ttl
func (UnimplementedHandler) AppRoleWriteTokenMaxTTL(ctx context.Context, req *AppRoleWriteTokenMaxTtlRequest, params AppRoleWriteTokenMaxTTLParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteTokenNumUses implements app-role-write-token-num-uses operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/token-num-uses
func (UnimplementedHandler) AppRoleWriteTokenNumUses(ctx context.Context, req *AppRoleWriteTokenNumUsesRequest, params AppRoleWriteTokenNumUsesParams) error {
	return ht.ErrNotImplemented
}

// AppRoleWriteTokenTTL implements app-role-write-token-ttl operation.
//
// POST /auth/{approle_mount_path}/role/{role_name}/token-ttl
func (UnimplementedHandler) AppRoleWriteTokenTTL(ctx context.Context, req *AppRoleWriteTokenTtlRequest, params AppRoleWriteTokenTTLParams) error {
	return ht.ErrNotImplemented
}

// KvV2Configure implements kv-v2-configure operation.
//
// Configure backend level settings that are applied to every key in the key-value store.
//
// POST /{kv_v2_mount_path}/config
func (UnimplementedHandler) KvV2Configure(ctx context.Context, req *KvV2ConfigureRequest, params KvV2ConfigureParams) error {
	return ht.ErrNotImplemented
}

// KvV2Delete implements kv-v2-delete operation.
//
// DELETE /{kv_v2_mount_path}/data/{path}
func (UnimplementedHandler) KvV2Delete(ctx context.Context, params KvV2DeleteParams) error {
	return ht.ErrNotImplemented
}

// KvV2DeleteMetadataAndAllVersions implements kv-v2-delete-metadata-and-all-versions operation.
//
// DELETE /{kv_v2_mount_path}/metadata/{path}
func (UnimplementedHandler) KvV2DeleteMetadataAndAllVersions(ctx context.Context, params KvV2DeleteMetadataAndAllVersionsParams) error {
	return ht.ErrNotImplemented
}

// KvV2DeleteVersions implements kv-v2-delete-versions operation.
//
// POST /{kv_v2_mount_path}/delete/{path}
func (UnimplementedHandler) KvV2DeleteVersions(ctx context.Context, req *KvV2DeleteVersionsRequest, params KvV2DeleteVersionsParams) error {
	return ht.ErrNotImplemented
}

// KvV2DestroyVersions implements kv-v2-destroy-versions operation.
//
// POST /{kv_v2_mount_path}/destroy/{path}
func (UnimplementedHandler) KvV2DestroyVersions(ctx context.Context, req *KvV2DestroyVersionsRequest, params KvV2DestroyVersionsParams) error {
	return ht.ErrNotImplemented
}

// KvV2List implements kv-v2-list operation.
//
// GET /{kv_v2_mount_path}/metadata/{path}/
func (UnimplementedHandler) KvV2List(ctx context.Context, params KvV2ListParams) (r *StandardListResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2Read implements kv-v2-read operation.
//
// GET /{kv_v2_mount_path}/data/{path}
func (UnimplementedHandler) KvV2Read(ctx context.Context, params KvV2ReadParams) (r *KvV2ReadResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2ReadConfiguration implements kv-v2-read-configuration operation.
//
// Read the backend level settings.
//
// GET /{kv_v2_mount_path}/config
func (UnimplementedHandler) KvV2ReadConfiguration(ctx context.Context, params KvV2ReadConfigurationParams) (r *KvV2ReadConfigurationResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2ReadMetadata implements kv-v2-read-metadata operation.
//
// GET /{kv_v2_mount_path}/metadata/{path}
func (UnimplementedHandler) KvV2ReadMetadata(ctx context.Context, params KvV2ReadMetadataParams) (r *KvV2ReadMetadataResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2ReadSubkeys implements kv-v2-read-subkeys operation.
//
// GET /{kv_v2_mount_path}/subkeys/{path}
func (UnimplementedHandler) KvV2ReadSubkeys(ctx context.Context, params KvV2ReadSubkeysParams) (r *KvV2ReadSubkeysResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2UndeleteVersions implements kv-v2-undelete-versions operation.
//
// POST /{kv_v2_mount_path}/undelete/{path}
func (UnimplementedHandler) KvV2UndeleteVersions(ctx context.Context, req *KvV2UndeleteVersionsRequest, params KvV2UndeleteVersionsParams) error {
	return ht.ErrNotImplemented
}

// KvV2Write implements kv-v2-write operation.
//
// POST /{kv_v2_mount_path}/data/{path}
func (UnimplementedHandler) KvV2Write(ctx context.Context, req *KvV2WriteRequest, params KvV2WriteParams) (r *KvV2WriteResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// KvV2WriteMetadata implements kv-v2-write-metadata operation.
//
// POST /{kv_v2_mount_path}/metadata/{path}
func (UnimplementedHandler) KvV2WriteMetadata(ctx context.Context, req *KvV2WriteMetadataRequest, params KvV2WriteMetadataParams) error {
	return ht.ErrNotImplemented
}
